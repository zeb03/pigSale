<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ze.pigSale.mapper.UserMapper">

    <resultMap id="BaseResultMap" type="com.ze.pigSale.entity.User">
        <id property="userId" column="user_id" jdbcType="BIGINT"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="phone" column="phone" jdbcType="VARCHAR"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="gender" column="gender" jdbcType="VARCHAR"/>
        <result property="birthday" column="birthday" jdbcType="DATE"/>
    </resultMap>

    <sql id="Base_Column_List">
        user_id
        ,username,password,
        email,phone,name,
        gender,birthday,role,image
    </sql>

    <!-- User updateUser(User user); -->
    <update id="updateUser">
        update user
        set username = #{username},
            email    = #{email},
            phone    = #{phone},
            `name`   = #{name},
            gender   = #{gender},
            birthday = #{birthday},
            `role`   = #{role},
            image    = #{image},
            status   = #{status}
        where user_id = #{userId}
    </update>

    <update id="updateUserWithPwd">
        update user
        set username = #{username},
            password = #{password},
            email    = #{email},
            phone    = #{phone},
            `name`   = #{name},
            gender   = #{gender},
            birthday = #{birthday},
            `role`   = #{role},
            image    = #{image},
            status   = #{status}
        where user_id = #{userId}
    </update>

    <!-- void deleteUser(Long userId); -->
    <delete id="deleteUser">
        delete
        from user
        where user_id = #{userId}
    </delete>

    <!--User getUserById(Integer id)-->
    <select id="getUserById" resultType="User">
        select *
        from user
        where user_id = #{id}
    </select>

    <!-- User getUserByName(String username); -->
    <select id="getUserByName" resultType="User">
        select *
        from user
        where username = #{name}
    </select>

    <!-- Lond insertUser(User user); -->
    <insert id="insertUser" useGeneratedKeys="true" keyProperty="userId">
        insert into user(username, password, email, phone, role, status)
        values (#{username}, #{password}, #{email}, #{phone}, #{role}, #{status})
    </insert>

    <!-- User getUserByUsernameOrPhone(User); -->
    <select id="getUserByUsernameOrPhone" resultType="User">
        select *
        from user
        where status != 3
        and username = #{username}
           or phone = #{phone}
    </select>

    <select id="getUserList" resultType="User">
        select *
        from user
    </select>

    <select id="getUserByRole" resultType="com.ze.pigSale.entity.User">
        select *
        from user
        <where>
            role = 0
            <if test="search != null || search == ''">
                and username like '%${search}%'
            </if>
        </where>
    </select>

    <select id="getAdminByRole" resultType="com.ze.pigSale.entity.User">
        select *
        from user
        <where>
            role > 0
            <if test="search != null || search == ''">
                and username like '%${search}%'
            </if>
        </where>
    </select>

</mapper>
