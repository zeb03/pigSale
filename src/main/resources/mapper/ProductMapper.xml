<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ze.pigSale.mapper.ProductMapper">

    <resultMap id="BaseResultMap" type="com.ze.pigSale.entity.Product">
        <id property="productId" column="product_id" jdbcType="BIGINT"/>
        <result property="productName" column="product_name" jdbcType="VARCHAR"/>
        <result property="description" column="description" jdbcType="VARCHAR"/>
        <result property="categoryId" column="category_id" jdbcType="BIGINT"/>
        <result property="price" column="price" jdbcType="DECIMAL"/>
        <result property="image" column="image" jdbcType="VARCHAR"/>
        <result property="origin" column="origin" jdbcType="VARCHAR"/>
        <result property="stock" column="stock" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        category_id
        ,category_name,description,
        category_id,price,image,
        origin,stock,create_time,
        update_time
    </sql>
    <!-- void deleteProduct(Long productId); -->
    <delete id="deleteProduct">
        delete
        from product
        where product_id = #{productId}
    </delete>

    <!-- List<Product> getAllProduct(@Param("productName") String productName, @Param("categoryId") Long categoryId); -->
    <select id="getAllProduct" resultType="Product" resultMap="BaseResultMap">
        select * from product
        <where>
            <if test="productName != null and productName != ''">
                product_name like '%${productName}%'
            </if>
            <if test="categoryId != null">
                and category_id=#{categoryId}
            </if>
        </where>
    </select>

    <!-- List<Product> getAllProductByName(); -->
    <select id="getAllProductByName" resultType="Product">
        select *
        from product
        where product_name like #{name}
    </select>

    <!-- Product getProductById(@Param("id") Long id); -->
    <select id="getProductById" resultType="Product">
        select *
        from product
        where product_id = #{productId}
    </select>

    <!-- void insertProduct(Product product); -->
    <insert id="insertProduct" useGeneratedKeys="true" keyProperty="productId">
        insert into product(product_name,description,category_id,price,image,origin,stock,create_time,update_time)
        values (#{productName}, #{description}, #{categoryId}, #{price}, #{image}, #{origin}, #{stock},
                #{createTime}, #{updateTime})
    </insert>

    <!-- void updateProduct(Product product); -->
    <update id="updateProduct">
        update product
        set product_name = #{productName},
            description  = #{description},
            category_id  = #{categoryId},
            price        = #{price},
            image        = #{image},
            origin       = #{origin},
            stock        = #{stock},
            update_time  = #{updateTime}
        where product_id = #{productId}
    </update>
</mapper>
